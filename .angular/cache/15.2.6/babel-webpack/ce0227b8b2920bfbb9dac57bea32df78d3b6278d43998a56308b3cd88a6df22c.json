{"ast":null,"code":"import { first } from 'rxjs/operators';\nexport class ModalService {\n  constructor(dialogRef) {\n    this.dialogRef = dialogRef;\n    this.opened$ = this.dialogRef.afterOpened().pipe(first());\n  }\n  get context() {\n    return this.dialogRef.componentInstance.data.context;\n  }\n  close() {\n    this.dialogRef.close();\n  }\n  setHeaderText(headerText) {\n    this.dialogRef.componentInstance.data.headerText = headerText;\n  }\n  setTemplate(template) {\n    this.dialogRef.componentInstance.data.template = template;\n  }\n}","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,QAAQ,gBAAgB;AAOtC,OAAM,MAAOC,YAAY;EAGrBC,YAAoBC,SAAuB;IAAvB,cAAS,GAATA,SAAS;IAF7B,YAAO,GAAG,IAAI,CAACA,SAAS,CAACC,WAAW,EAAE,CAACC,IAAI,CAACL,KAAK,EAAE,CAAC;EAEL;EAE/C,IAAIM,OAAO;IACP,OAAO,IAAI,CAACH,SAAS,CAACI,iBAAiB,CAACC,IAAI,CAACF,OAAO;EACxD;EAEAG,KAAK;IACD,IAAI,CAACN,SAAS,CAACM,KAAK,EAAE;EAC1B;EAEAC,aAAa,CAACC,UAAkB;IAC5B,IAAI,CAACR,SAAS,CAACI,iBAAiB,CAACC,IAAI,CAACG,UAAU,GAAGA,UAAU;EACjE;EAEAC,WAAW,CAACC,QAA0B;IAClC,IAAI,CAACV,SAAS,CAACI,iBAAiB,CAACC,IAAI,CAACK,QAAQ,GAAGA,QAAQ;EAC7D","names":["first","ModalService","constructor","dialogRef","afterOpened","pipe","context","componentInstance","data","close","setHeaderText","headerText","setTemplate","template"],"sourceRoot":"","sources":["C:\\Users\\Erik\\Documents\\Projetos\\ng-scheduler\\src\\app\\shared\\components\\shared-modal\\shared-modal.service.ts"],"sourcesContent":["import { Optional, TemplateRef } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { first } from 'rxjs/operators';\r\n\r\n// Components\r\nimport { SharedModalComponent } from './shared-modal.component';\r\n\r\ntype DialogRef<T> = MatDialogRef<SharedModalComponent<T>>;\r\n\r\nexport class ModalService<T = undefined> {\r\n    opened$ = this.dialogRef.afterOpened().pipe(first());\r\n\r\n    constructor(private dialogRef: DialogRef<T>) { }\r\n\r\n    get context() {\r\n        return this.dialogRef.componentInstance.data.context;\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n    setHeaderText(headerText: string): void {\r\n        this.dialogRef.componentInstance.data.headerText = headerText;\r\n    }\r\n\r\n    setTemplate(template: TemplateRef<any>): void {\r\n        this.dialogRef.componentInstance.data.template = template;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}