{"ast":null,"code":"import { CalendarView } from 'angular-calendar';\nimport { SharedCalendarService } from './shared-calendar.service';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./shared-calendar.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/button-toggle\";\nimport * as i4 from \"angular-calendar\";\nconst _c0 = [\"userDialogTemplate\"];\nfunction SharedCalendarComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"form\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n  }\n}\nexport class SharedCalendarComponent {\n  constructor(calendarService, formBuilder) {\n    this.calendarService = calendarService;\n    this.formBuilder = formBuilder;\n    this.view = CalendarView.Month;\n    this.viewDate = this.calendarService.viewDate;\n    this.activeDayIsOpen = this.calendarService.activeDayIsOpen;\n    this.events = this.calendarService.events;\n    this.refresh = this.calendarService.refresh;\n    this.form = this.formBuilder.group({\n      start: [, [Validators.required]],\n      title: [, [Validators.required]],\n      end: [],\n      primary: [, [Validators.required]],\n      secondary: []\n    });\n  }\n  closeDialog() {\n    this.calendarService.closeDialog();\n  }\n  dayClicked({\n    date,\n    events\n  }) {\n    this.calendarService.dayClicked({\n      date,\n      events\n    });\n    this.viewDate = this.calendarService.viewDate;\n    this.activeDayIsOpen = this.calendarService.activeDayIsOpen;\n  }\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd\n  }) {\n    this.calendarService.eventTimesChanged({\n      event,\n      newStart,\n      newEnd\n    });\n    this.events = this.calendarService.events;\n  }\n  handleEvent(action, event, userDialogTemplate) {\n    this.calendarService.handleEvent(action, event, userDialogTemplate);\n  }\n  addEvent() {\n    this.calendarService.addEvent();\n  }\n  deleteEvent(eventToDelete) {\n    this.calendarService.deleteEvent(eventToDelete);\n  }\n  closeOpenMonthViewDay() {\n    this.calendarService.closeOpenMonthViewDay();\n  }\n}\nSharedCalendarComponent.ɵfac = function SharedCalendarComponent_Factory(t) {\n  return new (t || SharedCalendarComponent)(i0.ɵɵdirectiveInject(i1.SharedCalendarService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nSharedCalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SharedCalendarComponent,\n  selectors: [[\"app-shared-calendar\"]],\n  viewQuery: function SharedCalendarComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.userDialogTemplate = _t.first);\n    }\n  },\n  features: [i0.ɵɵProvidersFeature([SharedCalendarService])],\n  decls: 21,\n  vars: 14,\n  consts: [[1, \"row\", \"space-around\", \"header-wrapper\"], [1, \"grid-wrapper\"], [\"appearance\", \"legacy\", \"name\", \"fontStyle\", \"aria-label\", \"Font Style\", \"value\", \"today\"], [\"mwlCalendarPreviousView\", \"\", \"value\", \"previous\", 3, \"view\", \"viewDate\", \"viewDateChange\"], [\"mwlCalendarToday\", \"\", \"value\", \"today\", 3, \"viewDate\", \"viewDateChange\"], [\"mwlCalendarNextView\", \"\", \"value\", \"next\", 3, \"view\", \"viewDate\", \"viewDateChange\"], [2, \"visibility\", \"hidden\"], [3, \"viewDate\", \"events\", \"refresh\", \"activeDayIsOpen\", \"dayClicked\", \"eventClicked\", \"eventTimesChanged\"], [\"userDialogTemplate\", \"\"], [1, \"edit-modal\"], [3, \"formGroup\"]],\n  template: function SharedCalendarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-button-toggle-group\", 2)(3, \"mat-button-toggle\", 3);\n      i0.ɵɵlistener(\"viewDateChange\", function SharedCalendarComponent_Template_mat_button_toggle_viewDateChange_3_listener($event) {\n        return ctx.viewDate = $event;\n      })(\"viewDateChange\", function SharedCalendarComponent_Template_mat_button_toggle_viewDateChange_3_listener() {\n        return ctx.closeOpenMonthViewDay();\n      });\n      i0.ɵɵtext(4, \"Anterior\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-button-toggle\", 4);\n      i0.ɵɵlistener(\"viewDateChange\", function SharedCalendarComponent_Template_mat_button_toggle_viewDateChange_5_listener($event) {\n        return ctx.viewDate = $event;\n      });\n      i0.ɵɵtext(6, \"Hoje\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-button-toggle\", 5);\n      i0.ɵɵlistener(\"viewDateChange\", function SharedCalendarComponent_Template_mat_button_toggle_viewDateChange_7_listener($event) {\n        return ctx.viewDate = $event;\n      })(\"viewDateChange\", function SharedCalendarComponent_Template_mat_button_toggle_viewDateChange_7_listener() {\n        return ctx.closeOpenMonthViewDay();\n      });\n      i0.ɵɵtext(8, \"Pr\\u00F3ximo\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"h3\");\n      i0.ɵɵtext(11);\n      i0.ɵɵpipe(12, \"calendarDate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"span\", 6);\n      i0.ɵɵtext(15, \" hidden space aa \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"div\")(18, \"mwl-calendar-month-view\", 7);\n      i0.ɵɵlistener(\"dayClicked\", function SharedCalendarComponent_Template_mwl_calendar_month_view_dayClicked_18_listener($event) {\n        return ctx.dayClicked($event.day);\n      })(\"eventClicked\", function SharedCalendarComponent_Template_mwl_calendar_month_view_eventClicked_18_listener($event) {\n        return ctx.handleEvent(\"Clicked\", $event.event, null);\n      })(\"eventTimesChanged\", function SharedCalendarComponent_Template_mwl_calendar_month_view_eventTimesChanged_18_listener($event) {\n        return ctx.eventTimesChanged($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(19, SharedCalendarComponent_ng_template_19_Template, 2, 1, \"ng-template\", null, 8, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"view\", ctx.view)(\"viewDate\", ctx.viewDate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"viewDate\", ctx.viewDate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"view\", ctx.view)(\"viewDate\", ctx.viewDate);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind3(12, 10, ctx.viewDate, ctx.view + \"ViewTitle\", \"en\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"viewDate\", ctx.viewDate)(\"events\", ctx.events)(\"refresh\", ctx.refresh)(\"activeDayIsOpen\", ctx.activeDayIsOpen);\n    }\n  },\n  dependencies: [i3.MatButtonToggleGroup, i3.MatButtonToggle, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i4.ɵCalendarPreviousViewDirective, i4.ɵCalendarNextViewDirective, i4.ɵCalendarTodayDirective, i4.CalendarMonthViewComponent, i4.ɵCalendarDatePipe],\n  styles: [\"h3[_ngcontent-%COMP%] {\\r\\n    margin: 0 0 10px;\\r\\n}\\r\\n\\r\\npre[_ngcontent-%COMP%] {\\r\\n    background-color: #f5f5f5;\\r\\n    padding: 15px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2NvbXBvbmVudHMvc2hhcmVkLWNhbGVuZGFyL3NoYXJlZC1jYWxlbmRhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLGFBQWE7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyJoMyB7XHJcbiAgICBtYXJnaW46IDAgMCAxMHB4O1xyXG59XHJcblxyXG5wcmUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"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","names":["CalendarView","SharedCalendarService","Validators","i0","SharedCalendarComponent","constructor","calendarService","formBuilder","Month","viewDate","activeDayIsOpen","events","refresh","form","group","start","required","title","end","primary","secondary","closeDialog","dayClicked","date","eventTimesChanged","event","newStart","newEnd","handleEvent","action","userDialogTemplate","addEvent","deleteEvent","eventToDelete","closeOpenMonthViewDay","selectors","viewQuery","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Erik\\Documents\\Projetos\\ng-scheduler\\src\\app\\shared\\components\\shared-calendar\\shared-calendar.component.ts","C:\\Users\\Erik\\Documents\\Projetos\\ng-scheduler\\src\\app\\shared\\components\\shared-calendar\\shared-calendar.component.html"],"sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  TemplateRef,\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  CalendarEventTimesChangedEvent,\n  CalendarView,\n} from 'angular-calendar';\nimport { SharedCalendarService } from './shared-calendar.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ScheduleForm } from './schedule-form.model';\n\n@Component({\n  selector: 'app-shared-calendar',\n  templateUrl: './shared-calendar.component.html',\n  styleUrls: ['./shared-calendar.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [SharedCalendarService]\n})\nexport class SharedCalendarComponent {\n  form: FormGroup | any;\n  schedule: ScheduleForm | any;\n  view: CalendarView = CalendarView.Month;\n  viewDate = this.calendarService.viewDate;\n  activeDayIsOpen = this.calendarService.activeDayIsOpen;\n  events = this.calendarService.events;\n  refresh = this.calendarService.refresh;\n  @ViewChild(\"userDialogTemplate\") userDialogTemplate: TemplateRef<any> | any;\n\n\n  constructor(\n    private calendarService: SharedCalendarService,\n    protected formBuilder: FormBuilder\n  ) {\n    this.form = this.formBuilder.group({\n      start: [, [Validators.required]],\n      title: [, [Validators.required]],\n      end: [],\n      primary: [, [Validators.required]],\n      secondary: []\n    })\n  }\n\n  closeDialog() {\n    this.calendarService.closeDialog();\n  }\n\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n    this.calendarService.dayClicked({ date, events });\n    this.viewDate = this.calendarService.viewDate;\n    this.activeDayIsOpen = this.calendarService.activeDayIsOpen;\n  }\n\n  eventTimesChanged({\n    event,\n    newStart,\n    newEnd,\n  }: CalendarEventTimesChangedEvent): void {\n    this.calendarService.eventTimesChanged({ event, newStart, newEnd } as CalendarEventTimesChangedEvent);\n    this.events = this.calendarService.events;\n  }\n\n  handleEvent(action: string, event: CalendarEvent, userDialogTemplate: TemplateRef<any> | null): void {\n    \n    this.calendarService.handleEvent(action, event, userDialogTemplate);\n  }\n\n  addEvent(): void {\n    this.calendarService.addEvent();\n  }\n\n  deleteEvent(eventToDelete: CalendarEvent) {\n    this.calendarService.deleteEvent(eventToDelete);\n  }\n\n  closeOpenMonthViewDay() {\n    this.calendarService.closeOpenMonthViewDay();\n  }\n}","<div class=\"row space-around header-wrapper\">\n    <div class=\"grid-wrapper\">\n        <mat-button-toggle-group appearance=\"legacy\" name=\"fontStyle\" aria-label=\"Font Style\" value=\"today\">\n            <mat-button-toggle [view]=\"view\" mwlCalendarPreviousView [(viewDate)]=\"viewDate\"\n                (viewDateChange)=\"closeOpenMonthViewDay()\" value=\"previous\">Anterior</mat-button-toggle>\n            <mat-button-toggle mwlCalendarToday [(viewDate)]=\"viewDate\" value=\"today\">Hoje</mat-button-toggle>\n            <mat-button-toggle [view]=\"view\" mwlCalendarNextView [(viewDate)]=\"viewDate\"\n                (viewDateChange)=\"closeOpenMonthViewDay()\" value=\"next\">Próximo</mat-button-toggle>\n        </mat-button-toggle-group>\n    </div>\n    <div class=\"grid-wrapper\">\n        <h3>{{ viewDate | calendarDate:(view +'ViewTitle'):'en' }}</h3>\n    </div>\n    <div class=\"grid-wrapper\">\n        <span style=\"visibility: hidden;\">\n            hidden space aa\n        </span>\n    </div>\n</div>\n<br />\n<div>\n    <mwl-calendar-month-view [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\"\n        [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\"\n        (eventClicked)=\"handleEvent('Clicked', $event.event, null)\" (eventTimesChanged)=\"eventTimesChanged($event)\">\n    </mwl-calendar-month-view>\n</div>\n\n<ng-template #userDialogTemplate>\n    <div class=\"edit-modal\">\n        <form [formGroup]=\"form\">\n\n            \n\n        </form>\n    </div>\n</ng-template>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}