{"ast":null,"code":"import { ModalService } from \"./shared-modal.service\";\nimport { SharedModalComponent } from \"./shared-modal.component\";\nimport { first } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nexport class ModalFactoryService {\n  constructor(dialog) {\n    this.dialog = dialog;\n  }\n  open(dialogData, options = {\n    width: 500,\n    disableClose: false\n  }) {\n    const dialogRef = this.dialog.open(SharedModalComponent, {\n      ...this.fetchOptions(options),\n      data: dialogData\n    });\n    dialogRef.afterClosed().pipe(first());\n    return new ModalService(dialogRef);\n  }\n  fetchOptions({\n    width,\n    disableClose\n  }) {\n    return {\n      width: `${width}px`,\n      disableClose\n    };\n  }\n}\nModalFactoryService.ɵfac = function ModalFactoryService_Factory(t) {\n  return new (t || ModalFactoryService)(i0.ɵɵinject(i1.MatDialog));\n};\nModalFactoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ModalFactoryService,\n  factory: ModalFactoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAASA,YAAY,QAAQ,wBAAwB;AACrD,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,KAAK,QAAQ,MAAM;;;AAK5B,OAAM,MAAOC,mBAAmB;EAC5BC,YAAoBC,MAAiB;IAAjB,WAAM,GAANA,MAAM;EAAe;EAEzCC,IAAI,CACAC,UAAwB,EACxBC,UAAwB;IAAEC,KAAK,EAAE,GAAG;IAAEC,YAAY,EAAE;EAAK,CAAE;IAE3D,MAAMC,SAAS,GAAG,IAAI,CAACN,MAAM,CAACC,IAAI,CAC9BL,oBAAoB,EACpB;MACI,GAAG,IAAI,CAACW,YAAY,CAACJ,OAAO,CAAC;MAC7BK,IAAI,EAAEN;KACT,CACJ;IAEDI,SAAS,CAACG,WAAW,EAAE,CAACC,IAAI,CAACb,KAAK,EAAE,CAAC;IACrC,OAAO,IAAIF,YAAY,CAACW,SAAS,CAAC;EACtC;EAEQC,YAAY,CAAC;IACjBH,KAAK;IACLC;EAAY,CACD;IAIX,OAAO;MACHD,KAAK,EAAE,GAAGA,KAAK,IAAI;MACnBC;KACH;EACL;;AA9BSP,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAa,SAAnBb,mBAAmB;EAAAc,YAFhB;AAAM","names":["ModalService","SharedModalComponent","first","ModalFactoryService","constructor","dialog","open","dialogData","options","width","disableClose","dialogRef","fetchOptions","data","afterClosed","pipe","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Erik\\Documents\\Projetos\\ng-scheduler\\src\\app\\shared\\components\\shared-modal\\shared-modal-factory.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\r\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\"\r\nimport { ModalOptions } from \"./model/shared-model-options.model\"\r\nimport { ModalData } from \"./model/shared-modal.model\"\r\nimport { ModalService } from \"./shared-modal.service\"\r\nimport { SharedModalComponent } from \"./shared-modal.component\"\r\nimport { first } from \"rxjs\"\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ModalFactoryService<T = undefined> {\r\n    constructor(private dialog: MatDialog) { }\r\n\r\n    open(\r\n        dialogData: ModalData<T>,\r\n        options: ModalOptions = { width: 500, disableClose: false }\r\n    ): ModalService<T> {\r\n        const dialogRef = this.dialog.open<SharedModalComponent<T>, ModalData<T>>(\r\n            SharedModalComponent,\r\n            {\r\n                ...this.fetchOptions(options),\r\n                data: dialogData\r\n            }\r\n        )\r\n\r\n        dialogRef.afterClosed().pipe(first())\r\n        return new ModalService(dialogRef)\r\n    }\r\n\r\n    private fetchOptions({\r\n        width,\r\n        disableClose\r\n    }: ModalOptions): Pick<\r\n        MatDialogConfig<ModalData<T>>,\r\n        'width' | 'disableClose'\r\n    > {\r\n        return {\r\n            width: `${width}px`,\r\n            disableClose\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}